name: Docker Image

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:
      - main
    # Sequence of patterns matched against refs/tags
    tags:
      - v*
  release:
    types: [published]

env:
  IMAGE: latex

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
 
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Create Version
        id: prepare
        shell: bash
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          REPOSITORY_OWNER: ${{ github.repository_owner }}
        run: |
          TAGS="${DOCKERHUB_USERNAME}/${IMAGE}:latest,ghcr.io/${REPOSITORY_OWNER}/${IMAGE}:latest"
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            TAGS="${TAGS},${DOCKERHUB_USERNAME}/${IMAGE}:${VERSION},ghcr.io/${REPOSITORY_OWNER}/${IMAGE}:${VERSION}"
          fi
          echo ::set-output name=image::${TAGS}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build
        id: build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          tags: ${{ steps.prepare.outputs.image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.build.outputs.digest }}